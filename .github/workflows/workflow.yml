# This is a basic workflow to help you get started with Actions

name: Docker CI

on:
  push:
    branches: [ master ]
    
jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Update SHA
        run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/_meta

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build
        run: docker build -t alexaxms/inrad-api:$(echo $GITHUB_SHA | head -c7) .

      - name: Docker push
        run: docker push alexaxms/inrad-api:$(echo $GITHUB_SHA | head -c7)

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    container: ruby:latest
    needs: build
    steps:
      - name: Checkout Project
        uses: actions/checkout@v1

      - name: Install gems
        run: gem install ejson && gem install krane

      - name: Install Kubectl
        run: |
          apt-get update && apt-get install -y apt-transport-https gnupg2 curl
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
          apt-get update
          apt-get install -y kubectl

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|alexaxms/inrad-api:'${TAG}'|' $GITHUB_WORKSPACE/.kubernetes/prod/deployment.yaml

      - name: Deploy
        run: |
          cd .kubernetes/prod
          echo ${{ secrets.KUBECONFIG }} | base64 -d > kubeconfig
          echo ${{ secrets.GOOGLE_CREDENTIAL }} | base64 -d > service_account.json
          export KUBECONFIG=kubeconfig
          export GOOGLE_APPLICATION_CREDENTIALS=service_account.json
          if ! $(kubectl get secret ejson-keys -n inrad >/dev/null 2>&1); then kubectl -n inrad create secret generic ejson-keys --from-literal=${{ secrets.PROD_K8S_SECRETS_PUBLIC_KEY }}=${{ secrets.PROD_K8S_SECRETS_PRIVATE_KEY }}; fi
          krane deploy inrad  gke_digital-seat-308620_us-central1-c_main-cluster -f .